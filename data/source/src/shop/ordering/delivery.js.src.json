[null,null,null,["delivery.js","src/shop/ordering/delivery.js",[null,"/*"," * Copyright 2018, Bloombox, LLC. All rights reserved."," *"," * Source and object computer code contained herein is the private intellectual"," * property of Bloombox, a California Limited Liability Corporation. Use of this"," * code in source form requires permission in writing before use or the"," * assembly, distribution, or publishing of derivative works, for commercial"," * purposes or any other purpose, from a duly authorized officer of Momentum"," * Ideas Co."," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," */",null,"/**"," * Bloombox: Delivery"," *"," * @fileoverview Provides logic specific to delivery orders."," */",null,"/*global goog */",null,"goog.provide('bloombox.shop.order.DeliveryLocation');","goog.provide('bloombox.shop.order.DeliveryLocation.fromResponse');",null,"goog.require('bloombox.identity.StreetAddress');",null,"goog.require('proto.opencannabis.commerce.DeliveryDestination');","goog.require('proto.opencannabis.geo.Address');",null,null,"// -- Delivery Location -- //",null,"/**"," * Specifies the location for a delivery."," *"," * @param {bloombox.identity.StreetAddress} streetAddress Delivery address."," * @param {?string=} instructions Delivery instructions, if any."," * @constructor"," * @export"," */","bloombox.shop.order.DeliveryLocation = function DeliveryLocation(streetAddress,","                                                                 instructions) {","  /**","   * Street address for delivery.","   * @type {bloombox.identity.StreetAddress}","   */","  this.streetAddress = streetAddress;",null,"  /**","   * Special instructions for delivery, if any.","   * @type {?string}","   */","  this.deliveryInstructions = instructions || null;","};",null,null,"/**"," * Decode a delivery location from a raw proto object response."," *"," * @param {?Object} protob Raw response object."," * @return {?bloombox.shop.order.DeliveryLocation} Decoded delivery location"," *         object, or `null` if none could be decoded."," */","bloombox.shop.order.DeliveryLocation.fromResponse = function(protob) {","  if ((typeof protob === 'object') &&","      (typeof protob['destination'] === 'object')) {","    // decode location","    let data = /** @type {Object} */ (protob['destination']);","    let address = /** @type {Object|undefined} */ (data['address']);","    let instructions = /** @type {string|null|undefined} */ (","      data['instructions']);",null,"    if (typeof address === 'object') {","      // decode address","      let firstLine = /** @type {string|undefined|null} */ (","        address['firstLine']);","      let secondLine = /** @type {string|undefined|null} */ (","        address['secondLine']) || null;","      let city = /** @type {string|undefined|null} */ (","        address['city']);","      let state = /** @type {string|undefined|null} */ (","        address['state']);","      let zipcode = /** @type {string|undefined|null} */ (","        address['zipcode']);",null,"      if (typeof firstLine === 'string' &&","          typeof city === 'string' &&","          typeof state === 'string' &&","          typeof zipcode === 'string') {","        // we are good to go","        return new bloombox.shop.order.DeliveryLocation(","          new bloombox.identity.StreetAddress(","            firstLine,","            secondLine,","            city,","            state,","            zipcode),","          instructions);","      } else {","        // invalid address","        bloombox.logging.error(","          'Failed to decode delivery address data.',","          {'data': data, 'address': address});","      }","    }","  }","  return null;","};",null,null,"/**"," * Export a proto that specifies this delivery location."," *"," * @return {proto.opencannabis.commerce.DeliveryDestination} Exported proto."," * @public"," */","bloombox.shop.order.DeliveryLocation.prototype.export = function() {","  let protobuf = new proto.opencannabis.commerce.DeliveryDestination();","  let address = new proto.opencannabis.geo.Address();",null,"  address.setFirstLine(this.streetAddress.firstLine);","  if (this.streetAddress.secondLine !== null)","    address.setSecondLine(this.streetAddress.secondLine);","  address.setCity(this.streetAddress.city);","  address.setState(this.streetAddress.state);","  address.setZipcode(this.streetAddress.zip);","  protobuf.setAddress(address);",null,"  if (this.deliveryInstructions !== null)","    protobuf.setInstructions(this.deliveryInstructions);","  return protobuf;","};",null,null,"/**"," * Retrieve the street address associated with this delivery location."," *"," * @return {bloombox.identity.StreetAddress} Delivery street address."," * @export"," */","bloombox.shop.order.DeliveryLocation.prototype.getAddress = function() {","  return this.streetAddress;","};",null,null,"/**"," * Set special delivery instructions."," * @param {string} ins Special instructions."," * @export"," */","bloombox.shop.order.DeliveryLocation.prototype.setInstructions = function(ins) {","  this.deliveryInstructions = ins;","};",null,"// noinspection JSUnusedGlobalSymbols","/**"," * Clear any special delivery instructions."," * @export"," */","bloombox.shop.order.DeliveryLocation.prototype.clearInstructions = function() {","  this.deliveryInstructions = null;","};"]]]