[null,null,null,["browser.js","node_modules/closure-builder/third_party/closure-library/closure/goog/labs/useragent/browser.js",["// Copyright 2013 The Closure Library Authors. All Rights Reserved.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS-IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.",null,"/**"," * @fileoverview Closure user agent detection (Browser)."," * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>"," * For more information on rendering engine, platform, or device see the other"," * sub-namespaces in goog.labs.userAgent, goog.labs.userAgent.platform,"," * goog.labs.userAgent.device respectively.)"," *"," * @author martone@google.com (Andy Martone)"," */",null,"goog.provide('goog.labs.userAgent.browser');",null,"goog.require('goog.array');","goog.require('goog.labs.userAgent.util');","goog.require('goog.object');","goog.require('goog.string');",null,null,"// TODO(nnaze): Refactor to remove excessive exclusion logic in matching","// functions.",null,null,"/**"," * @return {boolean} Whether the user's browser is Opera.  Note: Chromium"," *     based Opera (Opera 15+) is detected as Chrome to avoid unnecessary"," *     special casing."," * @private"," */","goog.labs.userAgent.browser.matchOpera_ = function() {","  return goog.labs.userAgent.util.matchUserAgent('Opera');","};",null,null,"/**"," * @return {boolean} Whether the user's browser is IE."," * @private"," */","goog.labs.userAgent.browser.matchIE_ = function() {","  return goog.labs.userAgent.util.matchUserAgent('Trident') ||","      goog.labs.userAgent.util.matchUserAgent('MSIE');","};",null,null,"/**"," * @return {boolean} Whether the user's browser is Edge."," * @private"," */","goog.labs.userAgent.browser.matchEdge_ = function() {","  return goog.labs.userAgent.util.matchUserAgent('Edge');","};",null,null,"/**"," * @return {boolean} Whether the user's browser is Firefox."," * @private"," */","goog.labs.userAgent.browser.matchFirefox_ = function() {","  return goog.labs.userAgent.util.matchUserAgent('Firefox');","};",null,null,"/**"," * @return {boolean} Whether the user's browser is Safari."," * @private"," */","goog.labs.userAgent.browser.matchSafari_ = function() {","  return goog.labs.userAgent.util.matchUserAgent('Safari') &&","      !(goog.labs.userAgent.browser.matchChrome_() ||","        goog.labs.userAgent.browser.matchCoast_() ||","        goog.labs.userAgent.browser.matchOpera_() ||","        goog.labs.userAgent.browser.matchEdge_() ||","        goog.labs.userAgent.browser.isSilk() ||","        goog.labs.userAgent.util.matchUserAgent('Android'));","};",null,null,"/**"," * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based"," *     iOS browser)."," * @private"," */","goog.labs.userAgent.browser.matchCoast_ = function() {","  return goog.labs.userAgent.util.matchUserAgent('Coast');","};",null,null,"/**"," * @return {boolean} Whether the user's browser is iOS Webview."," * @private"," */","goog.labs.userAgent.browser.matchIosWebview_ = function() {","  // iOS Webview does not show up as Chrome or Safari. Also check for Opera's","  // WebKit-based iOS browser, Coast.","  return (goog.labs.userAgent.util.matchUserAgent('iPad') ||","          goog.labs.userAgent.util.matchUserAgent('iPhone')) &&","      !goog.labs.userAgent.browser.matchSafari_() &&","      !goog.labs.userAgent.browser.matchChrome_() &&","      !goog.labs.userAgent.browser.matchCoast_() &&","      goog.labs.userAgent.util.matchUserAgent('AppleWebKit');","};",null,null,"/**"," * @return {boolean} Whether the user's browser is Chrome."," * @private"," */","goog.labs.userAgent.browser.matchChrome_ = function() {","  return (goog.labs.userAgent.util.matchUserAgent('Chrome') ||","          goog.labs.userAgent.util.matchUserAgent('CriOS')) &&","      !goog.labs.userAgent.browser.matchEdge_();","};",null,null,"/**"," * @return {boolean} Whether the user's browser is the Android browser."," * @private"," */","goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {","  // Android can appear in the user agent string for Chrome on Android.","  // This is not the Android standalone browser if it does.","  return goog.labs.userAgent.util.matchUserAgent('Android') &&","      !(goog.labs.userAgent.browser.isChrome() ||","        goog.labs.userAgent.browser.isFirefox() ||","        goog.labs.userAgent.browser.isOpera() ||","        goog.labs.userAgent.browser.isSilk());","};",null,null,"/**"," * @return {boolean} Whether the user's browser is Opera."," */","goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;",null,null,"/**"," * @return {boolean} Whether the user's browser is IE."," */","goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;",null,null,"/**"," * @return {boolean} Whether the user's browser is Edge."," */","goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;",null,null,"/**"," * @return {boolean} Whether the user's browser is Firefox."," */","goog.labs.userAgent.browser.isFirefox =","    goog.labs.userAgent.browser.matchFirefox_;",null,null,"/**"," * @return {boolean} Whether the user's browser is Safari."," */","goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;",null,null,"/**"," * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based"," *     iOS browser)."," */","goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;",null,null,"/**"," * @return {boolean} Whether the user's browser is iOS Webview."," */","goog.labs.userAgent.browser.isIosWebview =","    goog.labs.userAgent.browser.matchIosWebview_;",null,null,"/**"," * @return {boolean} Whether the user's browser is Chrome."," */","goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;",null,null,"/**"," * @return {boolean} Whether the user's browser is the Android browser."," */","goog.labs.userAgent.browser.isAndroidBrowser =","    goog.labs.userAgent.browser.matchAndroidBrowser_;",null,null,"/**"," * For more information, see:"," * http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html"," * @return {boolean} Whether the user's browser is Silk."," */","goog.labs.userAgent.browser.isSilk = function() {","  return goog.labs.userAgent.util.matchUserAgent('Silk');","};",null,null,"/**"," * @return {string} The browser version or empty string if version cannot be"," *     determined. Note that for Internet Explorer, this returns the version of"," *     the browser, not the version of the rendering engine. (IE 8 in"," *     compatibility mode will return 8.0 rather than 7.0. To determine the"," *     rendering engine version, look at document.documentMode instead. See"," *     http://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx for more"," *     details.)"," */","goog.labs.userAgent.browser.getVersion = function() {","  var userAgentString = goog.labs.userAgent.util.getUserAgent();","  // Special case IE since IE's version is inside the parenthesis and","  // without the '/'.","  if (goog.labs.userAgent.browser.isIE()) {","    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);","  }",null,"  var versionTuples =","      goog.labs.userAgent.util.extractVersionTuples(userAgentString);",null,"  // Construct a map for easy lookup.","  var versionMap = {};","  goog.array.forEach(versionTuples, function(tuple) {","    // Note that the tuple is of length three, but we only care about the","    // first two.","    var key = tuple[0];","    var value = tuple[1];","    versionMap[key] = value;","  });",null,"  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);",null,"  // Gives the value with the first key it finds, otherwise empty string.","  function lookUpValueWithKeys(keys) {","    var key = goog.array.find(keys, versionMapHasKey);","    return versionMap[key] || '';","  }",null,"  // Check Opera before Chrome since Opera 15+ has \"Chrome\" in the string.","  // See","  // http://my.opera.com/ODIN/blog/2013/07/15/opera-user-agent-strings-opera-15-and-beyond","  if (goog.labs.userAgent.browser.isOpera()) {","    // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\" first.","    // Opera uses 'OPR' for more recent UAs.","    return lookUpValueWithKeys(['Version', 'Opera']);","  }",null,"  // Check Edge before Chrome since it has Chrome in the string.","  if (goog.labs.userAgent.browser.isEdge()) {","    return lookUpValueWithKeys(['Edge']);","  }",null,"  if (goog.labs.userAgent.browser.isChrome()) {","    return lookUpValueWithKeys(['Chrome', 'CriOS']);","  }",null,"  // Usually products browser versions are in the third tuple after \"Mozilla\"","  // and the engine.","  var tuple = versionTuples[2];","  return tuple && tuple[1] || '';","};",null,null,"/**"," * @param {string|number} version The version to check."," * @return {boolean} Whether the browser version is higher or the same as the"," *     given version."," */","goog.labs.userAgent.browser.isVersionOrHigher = function(version) {","  return goog.string.compareVersions(","             goog.labs.userAgent.browser.getVersion(), version) >= 0;","};",null,null,"/**"," * Determines IE version. More information:"," * http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx#uaString"," * http://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx"," * http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx"," * http://blogs.msdn.com/b/ie/archive/2009/01/09/the-internet-explorer-8-user-agent-string-updated-edition.aspx"," *"," * @param {string} userAgent the User-Agent."," * @return {string}"," * @private"," */","goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {","  // IE11 may identify itself as MSIE 9.0 or MSIE 10.0 due to an IE 11 upgrade","  // bug. Example UA:","  // Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)","  // like Gecko.","  // See http://www.whatismybrowser.com/developers/unknown-user-agent-fragments.","  var rv = /rv: *([\\d\\.]*)/.exec(userAgent);","  if (rv && rv[1]) {","    return rv[1];","  }",null,"  var version = '';","  var msie = /MSIE +([\\d\\.]+)/.exec(userAgent);","  if (msie && msie[1]) {","    // IE in compatibility mode usually identifies itself as MSIE 7.0; in this","    // case, use the Trident version to determine the version of IE. For more","    // details, see the links above.","    var tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);","    if (msie[1] == '7.0') {","      if (tridentVersion && tridentVersion[1]) {","        switch (tridentVersion[1]) {","          case '4.0':","            version = '8.0';","            break;","          case '5.0':","            version = '9.0';","            break;","          case '6.0':","            version = '10.0';","            break;","          case '7.0':","            version = '11.0';","            break;","        }","      } else {","        version = '7.0';","      }","    } else {","      version = msie[1];","    }","  }","  return version;","};"]]]